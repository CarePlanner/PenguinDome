#
# The "port" setting can be three different things.
#
# If it is a single integer, then the server listens on that port.
#
# If it is a list of integers, than the server listens on all of the specified
# ports.
#
# If it is a mapping/dict, then the keys are port numbers and the values are
# port-specific settings which override the global settings. Currently
# supported port-specific settings are "threaded" to indicate whether the
# server process listening on this port should be threaded, and "deprecated" to
# indicate whether this port is deprecated. If a client connects to a
# deprecated port, then it's logged as such an open issue for the client is
# created in the database. In this way you can transition the server from one
# port to another and easily determine which clients haven't yet been updated
# to use the new port, before you turn it off. For example, to transition from
# port 80 to 8080, you could do:
#
# port:
#   80: {deprecated: true}
#   8080:
#
port: [server port, optional, defaults to 80]
threaded: [whether to run multithreaded server, optional, defaults to true]
database:
  host: [either a single host[:port] or a list, optional, defaults to localhost:27017]
  replicaset: [replicaset name, optional]
  name: [MongoDB database name, optional, defaults to "qlmdm"]
  username: [username to authenticate to database, optional]
  password: [password to authenticate to database, required if username specified]
logging:
  handler: [any Logbook *Handler, defaults to stderr]
  level: [log level name, optional, defaults to debug]
  facility: [facility to use with SyslogHandler, defaults to user]
audit_cron:
  enabled: [default no]
  email: [email address to receive the audit output]

